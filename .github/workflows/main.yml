# Simple workflow for deploying static content to GitHub Pages
name: Deploy production code

on:
  schedule:
    - cron: '20 0 * * *'

  # Runs on pushes targeting the default branch
  push:
    branches: ["main"]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: write
  pages: write
  id-token: write

# Allow one concurrent deployment
concurrency:
  group: "pages"
  cancel-in-progress: true

env:
  BRANCH_NAME: ${{ github.head_ref || github.ref_name }}

jobs:
  sync:
    runs-on: ubuntu-latest
    steps:
      - run: |
          echo "SYNC_BRANCH_NAME=\"feature/chore_automated_sync_rss_$(date +%s)\"" >> $GITHUB_ENV
          echo "SYNC_PR_TITLE=\"chore(automated): syncing RSS\"" >> $GITHUB_ENV

      - uses: actions/checkout@v3

      - run: |
          git config user.name "GitHub Actions Bot"
          git config user.email "<>"

          git branch $SYNC_BRANCH_NAME
          git switch $SYNC_BRANCH_NAME

          curl https://world.hey.com/ferrata/feed.atom > ./public/feed.atom

      - name: Check if anything changed
        id: check
        
        # https://stackoverflow.com/a/74325815/8607180
        # https://stackoverflow.com/a/857696/8607180
        # https://www.iamdeveloper.com/blog/automate-and-merge-pull-requests-using-github-actions-and-the-github-cli-4lo6/
        run: |
          git add .
          if [[ -n "$(git status --porcelain)" ]]; then
            echo "changed=true" >> $GITHUB_OUTPUT
          fi
        
      - name: Commit files
        if: steps.check.outputs.changed == 'true'
        run: |
          echo "Creating PR \"$SYNC_PR_TITLE\" for branch $SYNC_BRANCH_NAME"
          git commit -m "$SYNC_PR_TITLE"
          git push origin $SYNC_BRANCH_NAME
          gh pr create --title "$SYNC_PR_TITLE" --body "This is an automated PR to synchronize external files"
          gh pr merge --auto --delete-branch --squash "$SYNC_BRANCH_NAME"

  # Single deploy job since we're just deploying
  deploy:
    needs: sync
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      
      # https://github.com/actions/checkout/issues/439
      - run: |
          git pull origin $BRANCH_NAME
          npm install
          npm run build

      - name: Setup Pages
        uses: actions/configure-pages@v2
      
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v1
        with:
          path: './public'
      
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v1
